plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/releases/"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
		transitive = false
	}
	modImplementation "io.github.cottonmc.cotton:cotton-config:1.0.0-rc.7"

	include "io.github.cottonmc:Jankson-Fabric:3.0.0+j1.2.0"
	include "io.github.cottonmc.cotton:cotton-config:1.0.0-rc.7"
	include "io.github.cottonmc.cotton:cotton-logging:1.0.0-rc.4"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

import com.modrinth.minotaur.dependencies.ModDependency
modrinth {
	token = System.getenv('MODRINTH_TOKEN') // Please use an environment variable for this! The default is `$MODRINTH_TOKEN`.
	projectId = "${project.modrinth_project_id}" // The ID of your Modrinth project. Slugs will not work.
	versionNumber = "${project.mod_version}" // The (preferably SemVer) version of the mod. If not specified, it'll use the `version` declaration
	versionName = "${project.mod_version}"  // The version title. If not specified, it'll use the version number
	uploadFile = remapJar // Tells Minotaur to use the remapped jar
	gameVersions = ['1.19.3'] // An array of game versions the version supports
	loaders = ['fabric'] // Self-explanatory.
	dependencies = [
			new ModDependency('P7dR8mSH', 'required') // Creates a new required dependency on Fabric API
	]
}
